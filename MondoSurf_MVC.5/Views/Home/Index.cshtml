@{

    ViewData["Title"] = "Mondo Surf";

}


<div id="forecastDiv" class="container" style="background-color:#EEEEEE;">
    <p id="forecastTitle" class="jumbotron">Mondo Surf Forecast</p>
    <button type="button" id="toggleChart">&raquo;</button>
    <div id="forecastGraph"></div>
    <div id="forecastTable" class="table-forecast table-hidden table-responsive">

    </div>
</div>


@section IndexScripts {

    <script type="text/javascript">

    var surfData = [
        @{
        var surfData = ViewData["SurfData"];
        WriteLiteral(surfData);
        }
        ];

        $(document).ready(function () {
            
            // create and populate forecast table
            (function renderTable() {

                var params = ["Conditions", "Size(ft)"],
                    datum = surfData[0],
                    $table = $('<table></table>'),
                    $thead = $('<thead></thead>'),
                    $tbody = $('<tbody></tbody>'),
                    $trTime = $('<tr id="time"></tr>'),
                    $trContentShape = $('<tr id="shape"></tr>'),
                    $trContentSize = $('<tr id="size"></tr>'),
                    shape = [],
                    size = [];

                $.each(datum, time => {
                    var Hour = datum[time],
                        surfDataProps = ["shape_full", "size"],
                        $th = $('<th></th>');

                    $.each(Hour, () => {
                        $th.html(Hour.hour);
                        $trTime.append($th);
                        $thead.append($trTime);
                    });
                    shape.push(`<td>${Hour.shape_full}</td>`);
                    size.push(`<td>${Math.round(100 * Hour.size_ft) / 100}</td>`);

                });

                $trContentShape.append(shape);
                $trContentSize.append(size);
                $tbody.append($trContentShape, $trContentSize);
                $table.append($thead, $tbody);
                $('#forecastTable').append($table);

            })();

            // Toggle Forecast Table
            $('#toggleChart').click(() => {
                console.log(`${this} clicked`)
                $('.table-forecast').toggleClass('table-hidden');
            });

            /* ====================================
               ========= ====      ====   ===========
               ========= =    \   =    =  =============
               ========= =    ||     ==   ==============
               ========= =    /   =    =  =============
               ========= ====      ====   ===========
               ====================================
            */
            // ======== Basics ==========================
            // ==========================================
            // set the dimensions and margins of the graph
            var margin = {top: 15, right: 20, bottom: 30, left: 50},
                width = 760 - margin.left - margin.right,
                height = 300 - margin.top - margin.bottom,
            // parse the date / time
                parseTime = d3.timeParse("%I%p"),
            // set the ranges
                x = d3.scaleTime().range([0, width]),
                y = d3.scaleLinear().range([height, 0]),
            // define the line(s)
                hourLine = d3.line()
                .x(d => { return x(d.hour); })
                .y(d => { return y(d.size_ft); })
                .curve(d3.curveBasis);

            // define the area
            var area = d3.area()
                .x(d => { return x(d.hour); })
                .y0(height)
                .y1(d => { return y(d.size_ft); })
                .curve(d3.curveBasis);

            // append the svg object to the body of the page
            // appends'g' to 'svg' ( 'g', i.e., 'group element' )
            // moves 'g' to the top left margin
            var svg = d3.select("#forecastGraph").append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
              .append("g")
                .attr("transform",
                      "translate(" + margin.left + "," + margin.top + ")");

            (function draw(data) {

                var data = data[0];

                // format the data
                data.forEach(d => {
                    d.hour = parseTime(d.hour);
                    d.size_ft = +d.size_ft;
                });

                var sorter = {
                    "sun": 0,
                    "mon": 1,
                    "tue": 2,
                    "wed": 3,
                    "thu": 4,
                    "fri": 5,
                    "sat": 6,

                };
                data.sort(function sortByDay(a, b) {
                    var day1 = a.day.toLowerCase(),
                        day2 = b.day.toLowerCase();
                    return sorter[day1] > sorter[day2];
                });


                // sort hours ascending
                data.sort((a, b) => {
                    return a["hour"] - b["hour"];
                });

                // Scale the range of the data
                x.domain(d3.extent(data, d => {
                    return d.hour;
                }));
                y.domain([0, d3.max(data, d => {
                    return Math.round(Math.max(d.size_ft) + 3);
                })]);

                // Add valueline path.
                //svg.append("path")
                //    .data([data])
                //    .attr("class", "line")
                //    .attr("d", valueline);
                svg.append("path")
                    .datum(data)
                    .attr("class", "area")
                    .attr("d", area);
                // Add valueline2 path.
                svg.append("path")
                    .data([data])
                    .attr("class", "line")
                    .attr("d", hourLine);
                // Add X axis
                svg.append("g")
                    .attr("transform", "translate(0," + height + ")")
                    .call(d3.axisBottom(x));

                // Add Y axis
                svg.append("g")
                    .call(d3.axisLeft(y));
                // Text label for Y axis
                svg.append("text")
                    .attr("transform", "rotate(-90)")
                    .attr("y", 0 - margin.left)
                    .attr("x", 0 - (height / 2))
                    .attr("dy", "1em")
                    .style("text-anchor", "middle")
                    .text("Wave height(ft)");

            })(surfData); //draw graph with surf data

        });
    </script>



}

